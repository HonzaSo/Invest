// <auto-generated />
using Invest.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Invest.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250803135359_AddFinancialProductTable")]
    partial class AddFinancialProductTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.FinancialProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Close")
                        .HasColumnType("double precision");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("High")
                        .HasColumnType("double precision");

                    b.Property<double>("Low")
                        .HasColumnType("double precision");

                    b.Property<double>("Open")
                        .HasColumnType("double precision");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FinancialProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Close = 150.87,
                            From = "2023-09-01",
                            High = 154.33000000000001,
                            Low = 150.41999999999999,
                            Open = 153.77500000000001,
                            Symbol = "T",
                            Volume = 123456L
                        },
                        new
                        {
                            Id = 2,
                            Close = 150.87,
                            From = "2023-09-01",
                            High = 154.33000000000001,
                            Low = 150.41999999999999,
                            Open = 153.77500000000001,
                            Symbol = "E",
                            Volume = 123456L
                        },
                        new
                        {
                            Id = 3,
                            Close = 150.87,
                            From = "2023-09-01",
                            High = 154.33000000000001,
                            Low = 150.41999999999999,
                            Open = 153.77500000000001,
                            Symbol = "S",
                            Volume = 123456L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
